
sol 1. with checking the last bit and count and do right shift.

class Solution {
public:
    vector<int> countBits(int n) {

       vector<int> res;

        for(int i=0;i<=n;i++)
        {
            int a = countSetBits(i);
            res.push_back(a);
        }

    return res;
    }


    unsigned int countSetBits(unsigned int n)
    {
        unsigned int count = 0;
        while (n) {
            count += n & 1;
            n >>= 1;
        }
        return count;
    }
};

sol2. 


 class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> ans(n+1,0);
        for(int i=1 ; i<=n ; i++){
           if(i%2 == 0){
               ans[i] = ans[i/2];
           }else
               ans[i]=ans[i-1]+1;
            }
            return ans;
    }
};